/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rechnung.gui;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import rechnung.tools.Customer;
import rechnung.tools.DBTools;
import rechnung.tools.Product;

/**
 *
 * @author info
 */
public class NewOrder extends javax.swing.JFrame {

    /**
     * Creates new form NewNewRechnung
     */
    public NewOrder() {
        initComponents();
        showCustomer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ExitusRechnungus = new javax.swing.JButton();
        Titel = new javax.swing.JLabel();
        ProductOut = new javax.swing.JScrollPane();
        outputPanel2 = new rechnung.gui.OutputPanel();
        ChoseCustomer = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(740, 740));

        ExitusRechnungus.setText("Rechung Erstellen");
        ExitusRechnungus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitusRechnungusActionPerformed(evt);
            }
        });

        Titel.setText("Neue Rechnung Erstellen");

        ProductOut.setViewportView(outputPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProductOut, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(208, 208, 208)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Titel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ExitusRechnungus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(ChoseCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 192, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Titel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(ChoseCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProductOut, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ExitusRechnungus)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitusRechnungusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitusRechnungusActionPerformed
        String CustomerIDstring = ChoseCustomer.getSelectedItem().toString();
        int CustomerID = Integer.parseInt(CustomerIDstring.substring(0, CustomerIDstring.indexOf(" ")).trim());
        List<Bestellung> importlist = outputPanel2.getBills();
        try (Statement st = DBTools.getCon().createStatement()) {
            ResultSet rs = st.executeQuery("SELECT max(id) FROM invoice;");
            rs.next();
            int invoiceid = rs.getInt(1) + 1;
            rs.close();
            double total = 0;
            int item = 0;
            Product p;
            for (Bestellung b : importlist) {
                if (b.getAnz() > 0) {
                    total += b.getTotal();
                }
            }
            st.executeUpdate("INSERT INTO invoice (\"ID\", \"CUSTOMERID\", \"TOTAL\") VALUES(" + invoiceid + "," + CustomerID + "," + total + ");");
            for (Bestellung b : importlist) {
                if (b.getAnz() > 0) {
                    p = b.getProduct();
                    st.executeUpdate("INSERT INTO ITEM ( \"INVOICEID\", \"ITEM\", \"PRODUCTID\", \"QUANTITY\", \"COST\" )VALUES (" + invoiceid + "," + (item++) + "," + p.id + "," + b.getAnz() + "," + b.getTotalLonley() + ");");
                }
            }
        } catch (SQLException e) {
            System.err.println("Bestellung konnte nicht ins System überführt werden.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_ExitusRechnungusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewOrder().setVisible(true);
            }
        });
    }

    private void showCustomer() {
        for (Customer c : Customer.getCustomers(DBTools.getCon())) {
            ChoseCustomer.addItem(c.id + " | " + c.firstname + " " + c.lastname);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ChoseCustomer;
    private javax.swing.JButton ExitusRechnungus;
    private javax.swing.JScrollPane ProductOut;
    private javax.swing.JLabel Titel;
    private rechnung.gui.OutputPanel outputPanel2;
    // End of variables declaration//GEN-END:variables
}
